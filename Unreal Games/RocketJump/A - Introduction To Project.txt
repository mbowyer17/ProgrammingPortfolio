Welcome to code base for my game RocketJump!

Link to Game - TBD

Introduction:
The sole means of survival when trapped in a chamber with nothing but a rocket launcher is to outfit yourself with rocket-resistant footwear and use the launcher to avoid the traps.
The quick-fire first-person shooter mechanic from Team Fortress 2 and Quake served as the model for this project. I was surprised that no game was using this idea as the primary feature of their game, as it represented a gap in the market.
To develop this project, I used blueprints and Unreal Engine C++.

Objectives:
- Reaching the end of the puzzles 
- Avoid falling into dead zones

Mechanics:
- Character Controller
This script defines the behaviour and mechanics of a player character. Using keyboard inputs, the character can move forward, backward, strafe left, and strafe right, while the camera follows the character's movements. The camera view is controlled by mouse input, allowing the player to look about. Jumping is possible with a specific button push, utilising the built-in mechanics for character hopping in Unreal Engine. In addition, the character can shoot by spawningÂ projectiles from its position to imitate shooting. Notably, while in mid-air, the character can strafe left and right, creating a dynamic and responsive control experience. Input actions and axes are effectively connected to their respective functions, enabling straightforward control via keyboard and mouse inputs. This script initializes the character with default values and essential components, including the camera and spring arm, while also offering customization options such as the AirStrafeSpeed property to fine-tune air strafing behaviour.

- Rocket projectile

- Launch Pad

- Dead Zone  
Outcome/Lessons Learned:

